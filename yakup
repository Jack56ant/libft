#include "get_next_line.h"
#include <stdio.h>  
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>
#include <stdio.h>

char	*ft_substr(char const *s, unsigned int start, size_t len)
{
	unsigned int	i;
	char			*str;

	i = 0;
	if (!s)
		return (NULL);
	if (strlen(s) <= start)
		return (ft_strdup(""));
	if (len > ft_strlen(s) - start)
		len = strlen(s) - start;
	str = (char *)malloc(len + 1);
	if (!str)
		return (NULL);
	while (s[i + start] && i < len)
	{
		str[i] = s[i + start];
		i++;
	}
	str[i] = '\0';
	return (str);
}
char	*ft_strdup( char *s)
{
	size_t	len;
	char	*dup;

	len = strlen(s);
	dup = (char *)malloc(len + 1);
	if (dup == NULL)
		return (NULL);
	strlcpy(dup, s, len + 1);
	return (dup);
}
char	*ft_strjoin(char const *s1, char const *s2)
{
	int		total_len;
	char	*result;

	if (!s1 && !s2)
		return (NULL);
	if (!s1)
		return (strdup(s2));
	if (!s2)
		return (strdup(s1));
	total_len = ft_strlen(s1) + strlen(s2);
	result = (char *)malloc(total_len + 1);
	if (result == NULL)
		return (NULL);
	strlcpy(result, s1, ft_strlen(s1) + 1);
	strlcat(result, s2, total_len + 1);
	free(s1);
	return (result);
}

static new_line_pos(char *buffer)
{
    int i;

    i = 0;
    while (buffer[i])
    {
        if(buffer[i] == '\n')
            return(i);
            i++;
    }
    
}

int ft_strchar(char *src)
{
    while (*src)
    {
        if(*src == '\n')
            return(1);
    }
    return(0);
    
}
static char *read_myfd(int fd,char* artik)
{
    char *buffer[BUFFER_SIZE +1];
    int okunacak_byte = 1;
    char *line;
    int line_pos;
	char *temp;

    while (okunacak_byte > 0)
    {
        okunacak_byte = read(fd, buffer, BUFFER_SIZE);
        buffer[okunacak_byte] = '\0';
        if (!ft_strchar(buffer))
            line = ft_strjoin(line,buffer);
        else
        {
			
            line_pos = new_line_pos(buffer);
			temp = line;
            line = ft_strjoin(line,ft_substr(buffer,0,line_pos));
			free(temp);
            artik = ft_strdup(buffer+line_pos);
        }
    }
    return(line);

}


char *get_next_line(int fd)
{
    static  char* artik = NULL;
    char* line;
    line = read_myfd(fd,artik);
	return(line);

}

int main()
{
	int fd = open("text",O_RDWR);
	printf("%s",get_next_line(fd));
}
